<?php

namespace Proxies\__CG__\Apartamentos\ApartamentosBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Vehicle extends \Apartamentos\ApartamentosBundle\Entity\Vehicle implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'platenumber', 'type', 'parkingid', 'brandid', 'colorid', 'residentid', 'companyid', 'towerid', 'apartmentid', 'createdate', 'createuser', 'modifydate', 'modifyuser');
        }

        return array('__isInitialized__', 'id', 'platenumber', 'type', 'parkingid', 'brandid', 'colorid', 'residentid', 'companyid', 'towerid', 'apartmentid', 'createdate', 'createuser', 'modifydate', 'modifyuser');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Vehicle $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlatenumber($platenumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlatenumber', array($platenumber));

        return parent::setPlatenumber($platenumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlatenumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlatenumber', array());

        return parent::getPlatenumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setParkingid(\Apartamentos\ApartamentosBundle\Entity\Parking $parkingid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParkingid', array($parkingid));

        return parent::setParkingid($parkingid);
    }

    /**
     * {@inheritDoc}
     */
    public function getParkingid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParkingid', array());

        return parent::getParkingid();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrandid(\Apartamentos\ApartamentosBundle\Entity\Brand $brandid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrandid', array($brandid));

        return parent::setBrandid($brandid);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrandid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrandid', array());

        return parent::getBrandid();
    }

    /**
     * {@inheritDoc}
     */
    public function setColorid(\Apartamentos\ApartamentosBundle\Entity\Color $colorid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColorid', array($colorid));

        return parent::setColorid($colorid);
    }

    /**
     * {@inheritDoc}
     */
    public function getColorid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColorid', array());

        return parent::getColorid();
    }

    /**
     * {@inheritDoc}
     */
    public function setResidentid(\Apartamentos\ApartamentosBundle\Entity\Resident $residentid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResidentid', array($residentid));

        return parent::setResidentid($residentid);
    }

    /**
     * {@inheritDoc}
     */
    public function getResidentid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResidentid', array());

        return parent::getResidentid();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyid($companyid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyid', array($companyid));

        return parent::setCompanyid($companyid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyid', array());

        return parent::getCompanyid();
    }

    /**
     * {@inheritDoc}
     */
    public function setTowerid($towerid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTowerid', array($towerid));

        return parent::setTowerid($towerid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTowerid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTowerid', array());

        return parent::getTowerid();
    }

    /**
     * {@inheritDoc}
     */
    public function setApartmentid($apartmentid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApartmentid', array($apartmentid));

        return parent::setApartmentid($apartmentid);
    }

    /**
     * {@inheritDoc}
     */
    public function getApartmentid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApartmentid', array());

        return parent::getApartmentid();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedate($createdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedate', array($createdate));

        return parent::setCreatedate($createdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedate', array());

        return parent::getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifydate($modifydate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifydate', array($modifydate));

        return parent::setModifydate($modifydate);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifydate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifydate', array());

        return parent::getModifydate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateuser($createuser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateuser', array($createuser));

        return parent::setCreateuser($createuser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateuser', array());

        return parent::getCreateuser();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifyuser($modifyuser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifyuser', array($modifyuser));

        return parent::setModifyuser($modifyuser);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifyuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifyuser', array());

        return parent::getModifyuser();
    }

}
